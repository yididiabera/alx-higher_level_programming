Testing add_integer

>>> add_integer = __import__('0-add_integer').add_integer

# Making sure add_integer works.
>>> add_integer(4, 2)
6
>>> add_integer(-4, 2)
-2
>>> add_integer(4, -2)
2
>>> add_integer(-4, -2)
-6

# Making sure that the function adds two float arguments.
>>> add_integer(3.5, 2)
5
>>> add_integer(3, 2.5)
5
>>> add_integer(3.5, 2.5)
5

# Making sure it raises TypeError for invalid input.
>>> add_integer('Food', 2.5)
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(2, '98')
Traceback (most recent call last):
...
TypeError: b must be an integer

# Making sure float overflow
>>> add_integer(float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

# Default argument works
>>> add_integer(2)
100

# function with no arguments
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'