# 0-add_integer.txt

>>> add_integer = __import__('0-add_integer').add_integer

# making sure it works in all possible cases
::
    >>> add_integer(2, 3)
    5
::    
    >>> add_integer(-2, 3)
    1
::
    >>> add_integer(2, -3)
    -1
::
    >>> add_integer(-2, -3)
    -5

Note that the function can add two float argumets.

::
    >>> add_integer(4.5, 5)
    9
::
    >>> add_integer(4, 5.5)
    9
::
    >>> add_integer(4.5, 5.5)
    9

Non-Numbers
===========

Raises TypeError for invalid input.

>>> add_integer('Food', 3.5)
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(2, '98')
Traceback (most recent call last):
...
TypeError: b must be an integer

Making sure float overflow
>>> add_integer(float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

Making sure default argument works
>>> add_integer(2)
100

Make sure the function with no arguments
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'
